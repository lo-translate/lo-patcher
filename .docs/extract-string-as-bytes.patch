From 2659bcaa01659b21a3edd6f1583834c0a6844b36 Mon Sep 17 00:00:00 2001
From: Rashime <3317678+rashime@users.noreply.github.com>
Date: Wed, 22 Jul 2020 21:19:40 -0400
Subject: [PATCH] Extract string asset as bytes

---
 .../AssetTypeClass/AssetTypeTemplateField.cs       |  5 ++++-
 .../Standard/AssetTypeClass/AssetTypeValue.cs      | 14 +++++++++++++-
 2 files changed, 17 insertions(+), 2 deletions(-)

diff --git a/AssetTools.NET/Standard/AssetTypeClass/AssetTypeTemplateField.cs b/AssetTools.NET/Standard/AssetTypeClass/AssetTypeTemplateField.cs
index be359ed..345be5d 100644
--- a/AssetTools.NET/Standard/AssetTypeClass/AssetTypeTemplateField.cs
+++ b/AssetTools.NET/Standard/AssetTypeClass/AssetTypeTemplateField.cs
@@ -134,7 +134,10 @@ namespace AssetsTools.NET
                 if (type != 0) valueField.value = new AssetTypeValue(type, null);
                 if (type == EnumValueTypes.ValueType_String)
                 {
-                    valueField.value.Set(reader.ReadCountStringInt32());
+                    var length = reader.ReadInt32();
+                    var bytes = reader.ReadBytes(length);
+
+                    valueField.value.Set(bytes);
                     reader.Align();
                 }
                 else
diff --git a/AssetTools.NET/Standard/AssetTypeClass/AssetTypeValue.cs b/AssetTools.NET/Standard/AssetTypeClass/AssetTypeValue.cs
index dae6e1d..ecc039a 100644
--- a/AssetTools.NET/Standard/AssetTypeClass/AssetTypeValue.cs
+++ b/AssetTools.NET/Standard/AssetTypeClass/AssetTypeValue.cs
@@ -1,4 +1,5 @@
 ï»¿using System;
+using System.Text;
 
 namespace AssetsTools.NET
 {
@@ -7,6 +8,8 @@ namespace AssetsTools.NET
         //bool freeValue;
         public EnumValueTypes type;
 
+        private object rawValue;
+
         public struct ValueTypes
         {
             private object value;
@@ -97,10 +100,18 @@ namespace AssetsTools.NET
         {
             return type;
         }
+
+        public object GetRawValue()
+        {
+            return rawValue;
+        }
+
         public void Set(object valueContainer)
         {
             unchecked
             {
+                rawValue = valueContainer;
+                
                 switch (type)
                 {
                     case EnumValueTypes.ValueType_Bool:
@@ -137,7 +148,7 @@ namespace AssetsTools.NET
                         value.asDouble = Convert.ToDouble(valueContainer);
                         break;
                     case EnumValueTypes.ValueType_String:
-                        value.asString = Convert.ToString(valueContainer);
+                        value.asString = Convert.ToString(Encoding.UTF8.GetString((byte[])valueContainer));
                         break;
                     case EnumValueTypes.ValueType_Array:
                         value.asArray = (AssetTypeArray)valueContainer;
@@ -150,6 +161,7 @@ namespace AssetsTools.NET
                 }
             }
         }
+
         public AssetTypeArray AsArray()
         {
             return (type == EnumValueTypes.ValueType_Array) ? value.asArray : new AssetTypeArray() { size = 0xFFFF };
-- 
2.21.0.windows.1

